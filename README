Programs to compute Discrete Fourier Transform and Morlet continuous wavelet transform. May only work with GNU g++ compiler.


5 header files, 4 test cpp files, 2 bash scripts:

* allocate.h:       allocate multidimensional array of any data type. contiguous memory. code brevity.   
* complex.h:        complex numbers template class.
* table.h:          generated from table.cpp 
* dft.h:            discrete Fourier transform. Cooley Tukey/Rader algorithm.         
* morlet.h:         continuous wavelet transform with Morlet. 

* table.cpp:        generate table.h, to bit-reverse the input array in fft
* testdft.cpp:      tests of dft.h
* testmorlet.cpp:   tests of morlet.h
* wavelet2d.cpp:    sample 2D wavelet transform. OpenMP

* compile.sh:       script to compile the test programs     
* wavelet2d.sh:     script to run wavelet2D.cpp


Tips:
* You may want to read wavelet2D.pdf for the formulas to reconstruct and compute variance/covariance
* To use the bit-reverse fft code, change fft_bit_reverse to 1 in dft.h before compiling.
